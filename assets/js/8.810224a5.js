(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{361:function(t,s,a){t.exports=a.p+"assets/img/kubed.e88b1fb6.svg"},380:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"istio-knative-cert-manager-kubed-installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#istio-knative-cert-manager-kubed-installation"}},[t._v("#")]),t._v(" Istio + Knative + cert-manager + kubed installation")]),t._v(" "),e("p",[t._v("Before we move on with other tasks it is necessary to install Nginx Ingress.\nIt's also handy to install cert-manager for managing SSL certificates.")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/jetstack/cert-manager/ed2c0e0b3df1d10c3ad219348ed7b1ba56771655/logo/logo.svg?sanitize=true",width:"200"}})]),t._v(" "),e("h2",{attrs:{id:"install-cert-manager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-cert-manager"}},[t._v("#")]),t._v(" Install cert-manager")]),t._v(" "),e("p",[t._v("cert-manager architecture:")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/jetstack/cert-manager/4f30ed75e88e5d0defeb950501b5cac6da7fa7fe/docs/images/high-level-overview.png",alt:"cert-manager high level overview",title:"cert-manager high level overview"}})]),t._v(" "),e("p",[t._v("Install the CRDs resources separately:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.10/deploy/manifests/00-crds.yaml\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),e("p",[t._v("Create the namespace for cert-manager and label it to disable resource\nvalidation:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl create namespace cert-manager\nkubectl label namespace cert-manager certmanager.k8s.io/disable-validation"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])]),e("p",[t._v("Install the cert-manager Helm chart:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" jetstack https://charts.jetstack.io\nhelm repo update\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" cert-manager --namespace cert-manager --wait jetstack/cert-manager --version v0.10.1\n")])])]),e("p",[t._v("Output:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"jetstack" has been added to your repositories\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the "jetstack" chart repository\n...Successfully got an update from the "stable" chart repository\nUpdate Complete. ⎈ Happy Helming!⎈\nNAME: cert-manager\nLAST DEPLOYED: Fri Dec 27 10:48:40 2019\nNAMESPACE: cert-manager\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\ncert-manager has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a \'letsencrypt-staging\' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://docs.cert-manager.io/en/latest/reference/issuers.html\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://docs.cert-manager.io/en/latest/reference/ingress-shim.html\n')])])]),e("h3",{attrs:{id:"create-clusterissuer-for-let-s-encrypt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-clusterissuer-for-let-s-encrypt"}},[t._v("#")]),t._v(" Create ClusterIssuer for Let's Encrypt")]),t._v(" "),e("p",[t._v("Create "),e("code",[t._v("ClusterIssuer")]),t._v(" for Route53 used by cert-manager. It will allow Let's\nEncrypt to generate certificate. Route53 (DNS) method of requesting certificate\nfrom Let's Encrypt must be used to create wildcard certificate "),e("code",[t._v("*.mylabs.dev")]),t._v("\n(details "),e("a",{attrs:{href:"https://community.letsencrypt.org/t/wildcard-certificates-via-http-01/51223",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(").")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://b3n.org/wp-content/uploads/2016/09/acme_letsencrypt_dns-01-challenge.png",alt:"ACME DNS Challenge",title:"ACME DNS Challenge"}})]),t._v(" "),e("p",[t._v("("),e("a",{attrs:{href:"https://b3n.org/intranet-ssl-certificates-using-lets-encrypt-dns-01/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://b3n.org/intranet-ssl-certificates-using-lets-encrypt-dns-01/"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("USER_AWS_SECRET_ACCESS_KEY_BASE64")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$USER_AWS_SECRET_ACCESS_KEY")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply -f -")]),t._v("\napiVersion: v1\nkind: Secret\nmetadata:\n  name: aws-user-secret-access-key-secret\n  namespace: cert-manager\ndata:\n  secret-access-key: "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$USER_AWS_SECRET_ACCESS_KEY_BASE64")]),t._v("\n---\napiVersion: certmanager.k8s.io/v1alpha1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging-dns\n  namespace: cert-manager\nspec:\n  acme:\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    email: petr.ruzicka@gmail.com\n    privateKeySecretRef:\n      name: letsencrypt-staging-dns\n    dns01:\n      providers:\n      - name: aws-route53\n        route53:\n          accessKeyID: "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${USER_AWS_ACCESS_KEY_ID}")]),t._v("\n          region: eu-central-1\n          secretAccessKeySecretRef:\n            name: aws-user-secret-access-key-secret\n            key: secret-access-key\n---\napiVersion: certmanager.k8s.io/v1alpha1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-production-dns\n  namespace: cert-manager\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: petr.ruzicka@gmail.com\n    privateKeySecretRef:\n      name: letsencrypt-production-dns\n    dns01:\n      providers:\n      - name: aws-route53\n        route53:\n          accessKeyID: "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${USER_AWS_ACCESS_KEY_ID}")]),t._v("\n          region: eu-central-1\n          secretAccessKeySecretRef:\n            name: aws-user-secret-access-key-secret\n            key: secret-access-key\nEOF")]),t._v("\n")])])]),e("h2",{attrs:{id:"generate-tls-certificate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generate-tls-certificate"}},[t._v("#")]),t._v(" Generate TLS certificate")]),t._v(" "),e("p",[t._v("Create certificate using cert-manager:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply -f -")]),t._v("\napiVersion: certmanager.k8s.io/v1alpha1\nkind: Certificate\nmetadata:\n  name: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v("\n  namespace: cert-manager\nspec:\n  secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v("\n  issuerRef:\n    kind: ClusterIssuer\n    name: letsencrypt-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v('-dns\n  commonName: "*.'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('"\n  dnsNames:\n  - "*.'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('"\n  acme:\n    config:\n    - dns01:\n        provider: aws-route53\n      domains:\n      - "*.'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('"\nEOF')]),t._v("\n")])])]),e("p",[e("img",{attrs:{src:"https://www.openshift.com/hs-fs/hubfs/Imported_Blog_Media/OCP-PKI-and-certificates-cert-manager.png",alt:"cert-manager - Create certificate",title:"cert-manager - Create certificate"}})]),t._v(" "),e("p",[t._v("("),e("a",{attrs:{href:"https://www.openshift.com/blog/self-serviced-end-to-end-encryption-approaches-for-applications-deployed-in-openshift",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.openshift.com/blog/self-serviced-end-to-end-encryption-approaches-for-applications-deployed-in-openshift"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("h2",{attrs:{id:"install-kubed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-kubed"}},[t._v("#")]),t._v(" Install kubed")]),t._v(" "),e("p",[t._v("It's necessary to copy the wildcard certificate across all \"future\" namespaces\nand that's the reason why "),e("a",{attrs:{href:"https://github.com/appscode/kubed",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubed"),e("OutboundLink")],1),t._v(" needs to be\ninstalled (for now).\n"),e("a",{attrs:{href:"https://github.com/appscode/kubed",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubed"),e("OutboundLink")],1),t._v(" can "),e("a",{attrs:{href:"https://appscode.com/products/kubed/0.9.0/guides/config-syncer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("synchronize ConfigMaps/Secrets"),e("OutboundLink")],1),t._v("\nacross Kubernetes namespaces/clusters.")]),t._v(" "),e("p",[t._v("Kubed - synchronize secret diagram:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(361),alt:"Kubed - synchronize secret",title:"Kubed - synchronize secret"}})]),t._v(" "),e("p",[t._v("Add kubed helm repository:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" appscode https://charts.appscode.com/stable/\nhelm repo update\n")])])]),e("p",[t._v("Install kubed:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" kubed appscode/kubed --version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.11")]),t._v(".0 --namespace kube-system --wait "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set apiserver.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set config.clusterName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("my_k8s_cluster\n")])])]),e("p",[t._v("Output:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('NAME: kubed\nLAST DEPLOYED: Fri Dec 27 10:49:39 2019\nNAMESPACE: kube-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nTo verify that Kubed has started, run:\n\n  kubectl --namespace=kube-system get deployments -l "release=kubed, app=kubed"\n')])])]),e("p",[t._v("Annotate (mark) the cert-manager secret to be copied to other namespaces\nif necessary:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl annotate secret ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v(" -n cert-manager kubed.appscode.com/sync"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app=kubed"')]),t._v("\n")])])]),e("h2",{attrs:{id:"install-istio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-istio"}},[t._v("#")]),t._v(" Install Istio")]),t._v(" "),e("p",[t._v("Add Istio helm chart repository:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ISTIO_VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.3.6"')]),t._v("\nhelm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" istio.io https://storage.googleapis.com/istio-release/releases/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ISTIO_VERSION}")]),t._v("/charts/\nhelm repo update\n")])])]),e("p",[t._v("Install CRDs for Istio:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl create namespace istio-system\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" istio-init istio.io/istio-init --wait --namespace istio-system --version "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ISTIO_VERSION}")]),t._v("\nkubectl -n istio-system "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v(" --for"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("complete job --all\n")])])]),e("p",[t._v("Output:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("namespace/istio-system created\nNAME: istio-init\nLAST DEPLOYED: Fri Dec 27 10:49:56 2019\nNAMESPACE: istio-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\njob.batch/istio-init-crd-10-1.3.6 condition met\njob.batch/istio-init-crd-11-1.3.6 condition met\njob.batch/istio-init-crd-12-1.3.6 condition met\n")])])]),e("p",[t._v("Label Istio namespace and which will trigger "),e("code",[t._v("kubed")]),t._v(" to copy there the secret\nwith certificates signed by Let's Encrypt:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl label namespace istio-system "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubed\n")])])]),e("p",[t._v("Install Istio:")]),t._v(" "),e("p",[t._v("(steps take from "),e("a",{attrs:{href:"https://github.com/knative/docs/blob/a8a1032de0c2b19f07a70456c030dfde94b12c03/docs/install/installing-istio.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Knative page"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" istio istio.io/istio --wait --namespace istio-system --version "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ISTIO_VERSION}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.autoscaleMax"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.autoscaleMin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("status-port "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15020")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".targetPort"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15020")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".nodePort"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("31380")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".targetPort"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".nodePort"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("31390")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ssh "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".nodePort"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("31400")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.ports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set gateways.istio-ingressgateway.sds.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set global.disablePolicyChecks"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set global.k8sIngress.enableHttps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set global.k8sIngress.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set global.proxy.autoInject"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("disabled "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".access"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("proxy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".editable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".isDefault"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".jsonData.timeInterval"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5s "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Prometheus "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".orgId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prometheus "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.datasources."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datasources\\.yaml"')]),t._v(".datasources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://prometheus-system-np.knative-monitoring.svc.cluster.local:8080 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set grafana.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.contextPath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.createDemoSecret"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.dashboard.grafanaURL"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://grafana."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("/ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.dashboard.jaegerURL"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://jaeger."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("/ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set kiali.prometheusAddr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://prometheus-system-np.knative-monitoring.svc.cluster.local:8080 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set mixer.adapters.prometheus.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set pilot.traceSampling"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set prometheus.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set sidecarInjectorWebhook.enableNamespacesByDefault"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set sidecarInjectorWebhook.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set tracing.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])]),e("p",[t._v("Output:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("NAME: istio\nLAST DEPLOYED: Fri Dec 27 10:50:54 2019\nNAMESPACE: istio-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nThank you for installing Istio.\n\nYour release is named Istio.\n\nTo get started running application with Istio, execute the following steps:\n1. Label namespace that application object will be deployed to by the following command (take default namespace as an example)\n\n  kubectl label namespace default istio-injection=enabled\n  kubectl get namespace -L istio-injection\n\n2. Deploy your applications\n\n  kubectl apply -f <your-application>.yaml\n\nFor more information on running Istio, visit:\nhttps://istio.io/\n")])])]),e("p",[t._v("Let "),e("code",[t._v("istio-ingressgateway")]),t._v(" to use cert-manager generated certificate via\n"),e("a",{attrs:{href:"https://www.envoyproxy.io/docs/envoy/v1.5.0/intro/arch_overview/service_discovery#arch-overview-service-discovery-types-sds",target:"_blank",rel:"noopener noreferrer"}},[t._v("SDS"),e("OutboundLink")],1),t._v(".\nSteps are taken from this URL: "),e("a",{attrs:{href:"https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl -n istio-system patch gateway istio-autogenerated-k8s-ingress "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[{"')]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("op")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("replace"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("path"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("/spec/servers/1/tls"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("value"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": {"')]),t._v("credentialName"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("mode"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("SIMPLE"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("privateKey"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("sds"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("serverCertificate"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("sds"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"}}]"')]),t._v("\n")])])]),e("p",[t._v("Disable HTTP2 for gateway "),e("code",[t._v("istio-autogenerated-k8s-ingress")]),t._v(" to be compatible\nwith Knative:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl -n istio-system patch gateway istio-autogenerated-k8s-ingress --type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[{"')]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("op")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("replace"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("path"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("/spec/servers/0/port"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("value"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": {"')]),t._v("name"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("http"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("number"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("protocol"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("HTTP"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"}}]"')]),t._v("\n")])])]),e("p",[t._v("Allow the "),e("code",[t._v("default")]),t._v(" namespace to use Istio injection:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl label namespace default istio-injection"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("enabled\n")])])]),e("p",[t._v("Configure the Istio services "),e("a",{attrs:{href:"https://www.jaegertracing.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jaeger"),e("OutboundLink")],1),t._v(" and\n"),e("a",{attrs:{href:"https://www.kiali.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kiali"),e("OutboundLink")],1),t._v(" to be visible externally:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply -f -")]),t._v("\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: istio-services-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http-istio-services\n      protocol: HTTP\n    hosts:\n    - grafana-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - jaeger-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - kiali-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  - port:\n      number: 443\n      name: https-istio-services\n      protocol: HTTPS\n    hosts:\n    - grafana-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - jaeger-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - kiali-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    tls:\n      credentialName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v("\n      mode: SIMPLE\n      privateKey: sds\n      serverCertificate: sds\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: grafana-istio-virtual-service\n  namespace: istio-system\nspec:\n  hosts:\n  - grafana-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - istio-services-gateway\n  http:\n  - route:\n    - destination:\n        host: grafana.istio-system.svc.cluster.local\n        port:\n          number: 3000\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: jaeger-istio-virtual-service\n  namespace: istio-system\nspec:\n  hosts:\n  - jaeger-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - istio-services-gateway\n  http:\n  - route:\n    - destination:\n        host: tracing.istio-system.svc.cluster.local\n        port:\n          number: 80\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kiali-istio-virtual-service\n  namespace: istio-system\nspec:\n  hosts:\n  - kiali-istio."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - istio-services-gateway\n  http:\n  - route:\n    - destination:\n        host: kiali.istio-system.svc.cluster.local\n        port:\n          number: 20001\nEOF")]),t._v("\n")])])]),e("h2",{attrs:{id:"create-dns-records"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-dns-records"}},[t._v("#")]),t._v(" Create DNS records")]),t._v(" "),e("p",[t._v("Install "),e("a",{attrs:{href:"https://github.com/kubernetes-incubator/external-dns",target:"_blank",rel:"noopener noreferrer"}},[t._v("external-dns"),e("OutboundLink")],1),t._v(" and\nlet it manage "),e("code",[t._v("mylabs.dev")]),t._v(" entries in Route 53 (Do not upgrade external-dns,\nbecause it's not backward compatible and using different way of authentication\nto Route53 using roles):")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl create namespace external-dns\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" external-dns stable/external-dns --namespace external-dns --version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.10")]),t._v(".1 --wait "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set aws.credentials.accessKey"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${USER_AWS_ACCESS_KEY_ID}")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set aws.credentials.secretKey"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${USER_AWS_SECRET_ACCESS_KEY}")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set aws.region"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("eu-central-1 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("domainFilters")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("istioIngressGateways")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("istio-system/istio-ingressgateway"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("interval")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10s"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("policy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sync"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set rbac.create"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sources")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{istio-gateway,service}"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtOwnerId")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("}")]),t._v("-k8s."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('"')]),t._v("\n")])])]),e("p",[t._v("Output:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("namespace/external-dns created\nNAME"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" external-dns\nLAST DEPLOYED"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fri Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("\nNAMESPACE"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" external-dns\nSTATUS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" deployed\nREVISION"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nTEST SUITE"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" None\nNOTES"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n** Please be patient while the chart is being deployed **\n\nTo verify that external-dns has started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" run"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\n  kubectl --namespace=external-dns get pods -l "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app.kubernetes.io/name=external-dns,app.kubernetes.io/instance=external-dns"')]),t._v("\n")])])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/aws-samples/eks-workshop/65b766c494a5b4f5420b2912d8373c4957163541/static/images/crystal.svg?sanitize=true",alt:"Architecture",title:"Architecture"}})]),t._v(" "),e("p",[t._v("You should be able to reach these URLs:")]),t._v(" "),e("ul",[e("li",[t._v("Grafana: "),e("a",{attrs:{href:"https://grafana-istio.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://grafana-istio.mylabs.dev"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Jaeger: "),e("a",{attrs:{href:"https://jaeger-istio.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jaeger-istio.mylabs.dev"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Kiali: "),e("a",{attrs:{href:"https://kiali-istio.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kiali-istio.mylabs.dev"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);